# Generated by Django 4.2.5 on 2023-12-09 12:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Image_Set',
            fields=[
                ('image_set_id', models.AutoField(db_column='image_set_id', db_index=True, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Zipfile_Download',
            fields=[
                ('zipfile_id', models.AutoField(db_column='zipfile_id', db_index=True, primary_key=True, serialize=False)),
                ('zipfile', models.FileField(blank=True, db_column='zipfile', null=True, upload_to='zipfiles')),
                ('image_set_id_fk', models.OneToOneField(blank=True, db_column='image_set_id_fk', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='zipfile_download', to='hungry_hippo_app.image_set')),
            ],
        ),
        migrations.CreateModel(
            name='User_Profile',
            fields=[
                ('user_profile_id', models.AutoField(db_column='user_profile_id', db_index=True, primary_key=True, serialize=False)),
                ('user_profile_folder', models.CharField(blank=True, db_column='user_profile_folder', max_length=150, null=True)),
                ('user_id_fk', models.ForeignKey(db_column='user_id_fk', on_delete=django.db.models.deletion.CASCADE, related_name='user_profile_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Upload_File',
            fields=[
                ('file_id', models.AutoField(db_column='file_id', db_index=True, primary_key=True, serialize=False)),
                ('image_file', models.ImageField(db_column='image_file', max_length=512, upload_to='image_set_files')),
                ('baseimage', models.BooleanField(db_column='baseimage', default=False)),
                ('image_set_id_fk', models.ForeignKey(db_column='image_set_id_fk', on_delete=django.db.models.deletion.CASCADE, related_name='upload_file_set', to='hungry_hippo_app.image_set')),
            ],
        ),
        migrations.CreateModel(
            name='Processed_Images',
            fields=[
                ('processed_images_id', models.AutoField(db_column='processed_images_id', db_index=True, primary_key=True, serialize=False)),
                ('master', models.ImageField(db_column='master', max_length=512, upload_to='processed_images')),
                ('thumbnail', models.ImageField(db_column='thumbnail', max_length=512, upload_to='processed_images/thumbnail')),
                ('thumbnail_square', models.ImageField(db_column='thumbnail_square', max_length=512, upload_to='processed_images/sq_thumbnail')),
                ('medium', models.ImageField(db_column='medium', max_length=512, upload_to='processed_images/medium')),
                ('medium_square', models.ImageField(db_column='medium_square', max_length=512, upload_to='processed_images/sq_medium')),
                ('large', models.ImageField(db_column='large', max_length=512, upload_to='processed_images/large')),
                ('large_square', models.ImageField(db_column='large_square', max_length=512, upload_to='processed_images/sq_large')),
                ('social_media', models.ImageField(db_column='social_media', max_length=512, upload_to='processed_images/social_media')),
                ('social_media_square', models.ImageField(db_column='social_media_square', max_length=512, upload_to='processed_images/social_media')),
                ('upload_file_fk', models.OneToOneField(db_column='upload_file_fk', on_delete=django.db.models.deletion.CASCADE, related_name='processed_images_set', to='hungry_hippo_app.upload_file')),
            ],
        ),
        migrations.CreateModel(
            name='PIL_Cropper',
            fields=[
                ('pil_crop_id', models.AutoField(db_column='pil_crop_id', db_index=True, primary_key=True, serialize=False)),
                ('pil_crop_left', models.IntegerField(blank=True, db_column='pil_crop_left', null=True)),
                ('pil_crop_upper', models.IntegerField(blank=True, db_column='pil_crop_upper', null=True)),
                ('pil_crop_right', models.IntegerField(blank=True, db_column='pil_crop_right', null=True)),
                ('pil_crop_lower', models.IntegerField(blank=True, db_column='pil_crop_lower', null=True)),
                ('pil_scale_x', models.IntegerField(blank=True, db_column='pil_scale_x', null=True)),
                ('pil_scale_y', models.IntegerField(blank=True, db_column='pil_scale_y', null=True)),
                ('pil_rotation', models.IntegerField(blank=True, db_column='pil_rotation', null=True)),
                ('image_set_id_fk', models.OneToOneField(db_column='image_set_id_fk', on_delete=django.db.models.deletion.CASCADE, related_name='PIL_Cropper_sets', to='hungry_hippo_app.image_set')),
            ],
        ),
        migrations.CreateModel(
            name='Imagetag',
            fields=[
                ('imagetag_id', models.AutoField(db_column='imagetag_id', db_index=True, primary_key=True, serialize=False)),
                ('tag', models.ImageField(blank=True, db_column='tag', max_length=512, null=True, upload_to='user_tags')),
                ('image_set_id_fk', models.OneToOneField(db_column='image_set_id_fk', on_delete=django.db.models.deletion.CASCADE, related_name='imagetag_sets', to='hungry_hippo_app.image_set')),
            ],
        ),
        migrations.AddField(
            model_name='image_set',
            name='user_profile_id_fk',
            field=models.OneToOneField(db_column='user_profile_id_fk', on_delete=django.db.models.deletion.CASCADE, related_name='image_sets', to='hungry_hippo_app.user_profile'),
        ),
        migrations.CreateModel(
            name='Action_Set',
            fields=[
                ('actions_set_id', models.AutoField(db_column='action_set_id', db_index=True, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', default='action_set', max_length=45)),
                ('thumb_w', models.IntegerField(blank=True, db_column='thumb_w', default=250, null=True)),
                ('thumb_h', models.IntegerField(blank=True, db_column='thumb_h', default=250, null=True)),
                ('medium_w', models.IntegerField(blank=True, db_column='medium_w', default=1000, null=True)),
                ('medium_h', models.IntegerField(blank=True, db_column='medium_h', default=1000, null=True)),
                ('large_w', models.IntegerField(blank=True, db_column='large_w', default=1500, null=True)),
                ('large_h', models.IntegerField(blank=True, db_column='large_h', default=1500, null=True)),
                ('img_qual', models.IntegerField(db_column='img_qual', default=70)),
                ('gab_chk', models.BooleanField(blank=True, db_column='gab_chk', default=False, null=True)),
                ('minds_chk', models.BooleanField(blank=True, db_column='minds_chk', default=False, null=True)),
                ('telegram_chk', models.BooleanField(blank=True, db_column='telegram_chk', default=False, null=True)),
                ('x_chk', models.BooleanField(blank=True, db_column='x_chk', default=False, null=True)),
                ('fb_chk', models.BooleanField(blank=True, db_column='fb_chk', default=False, null=True)),
                ('soc_med_chk', models.BooleanField(blank=True, db_column='soc_med_chk', default=False, null=True)),
                ('square_chk', models.BooleanField(blank=True, db_column='square_chk', default=False, null=True)),
                ('tag_placement', models.CharField(blank=True, db_column='tag_placement', default='no_tag', max_length=16, null=True)),
                ('image_set_id_fk', models.OneToOneField(db_column='image_set_id_fk', on_delete=django.db.models.deletion.CASCADE, related_name='action_sets', to='hungry_hippo_app.image_set')),
            ],
        ),
    ]
